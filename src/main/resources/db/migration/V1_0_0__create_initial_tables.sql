CREATE TABLE ADDRESS (
    ID UUID PRIMARY KEY,
    POSTAL_CODE VARCHAR(9) NOT NULL,
    ADDRESS VARCHAR(100),
    COMPLEMENT VARCHAR(100),
    DISTRICT VARCHAR(50),
    CITY VARCHAR(50),
    STATE VARCHAR(2),
    COUNTRY VARCHAR(50)
);

CREATE TABLE DOCUMENT_TYPE (
    ID UUID PRIMARY KEY,
    DESCRIPTION VARCHAR(30)
);

CREATE TABLE PERSON (
    ID UUID PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    LAST_NAME VARCHAR(255) NOT NULL,
    FULL_NAME VARCHAR(255) NOT NULL,
    BIRTHDATE DATE,
    DOCUMENT_TYPE_ID UUID REFERENCES DOCUMENT_TYPE(ID) NOT NULL,
    DOCUMENT_ID VARCHAR(25),
    ADDRESS_ID UUID REFERENCES ADDRESS(ID) NOT NULL,
    PHONE_NUMBER VARCHAR(20),
    MOBILE_PHONE_NUMBER VARCHAR(20),
    EMAIL VARCHAR(100)
);

CREATE TABLE MATERIAL (
    ID UUID PRIMARY KEY,
    DESCRIPTION VARCHAR(100) NOT NULL,
    PRICE_M2 REAL NOT NULL
);

CREATE TABLE ORDER_SUB_ITEM (
    ID UUID PRIMARY KEY,
    MATERIAL_ID UUID REFERENCES MATERIAL(ID) NOT NULL,
    DESCRIPTION VARCHAR(100) NOT NULL,
    QUANTITY REAL NOT NULL,
    LENGTH_M2 REAL,
    WIDTH_M2 REAL,
    TOTAL_M2 REAL,
    TOTAL_PRICE_M2 REAL,
    TOTAL_PRICE_SUB_ITEM REAL NOT NULL
);

CREATE TABLE ORDER_ITEM (
    ID UUID PRIMARY KEY,
    DESCRIPTION VARCHAR (150) NOT NULL,
    FINISHING_M2 REAL NOT NULL,
    PRICE_FINISHING_M2 REAL NOT NULL,
    PRICE_WORKMANSHIP_M2 REAL NOT NULL,
    FREIGHT REAL,
    ORDER_NUMBER INTEGER,
    CLIENT_NAME_ID UUID REFERENCES PERSON(ID) NOT NULL,
    ARCHITECT_NAME_ID UUID REFERENCES PERSON(ID) NOT NULL,
    BUILD_ADDRESS UUID REFERENCES ADDRESS(ID) NOT NULL,
    SALESMAN UUID REFERENCES PERSON(ID) NOT NULL,
    VALIDITY DATE NOT NULL,
    DEADLINE_AFTER_SIGNED INTEGER NOT NULL
);

CREATE TABLE MANAGEMENT_USER (
    ID UUID PRIMARY KEY,
    USERNAME VARCHAR(255) NOT NULL UNIQUE,
    ENCRYPTED_PASSWORD VARCHAR(255) NOT NULL,
    IS_ENABLED BOOLEAN NOT NULL,
    IS_ACCOUNT_NON_EXPIRED BOOLEAN NOT NULL,
    IS_CREDENTIALS_NON_EXPIRED BOOLEAN NOT NULL,
    IS_ACCOUNT_NON_LOCKED BOOLEAN NOT NULL,
    PERSON_ID UUID REFERENCES PERSON(ID) NOT NULL
);

CREATE TABLE MANAGEMENT_ROLE (
    ID UUID PRIMARY KEY,
    ROLE_NAME VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE MANAGEMENT_USER_ROLE (
    MANAGEMENT_USER_ID UUID REFERENCES MANAGEMENT_USER(ID),
    MANAGEMENT_ROLE_ID UUID REFERENCES MANAGEMENT_ROLE(ID)
);